name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.25.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-godi
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Run code generation
      run: go generate ./...

    - name: Verify no changes after generation
      run: |
        # Remove coverage file before checking for changes
        rm -f coverage.out
        if [ -n "$(git status --porcelain)" ]; then
          echo "Code generation produced changes:"
          git status --porcelain
          git diff
          exit 1
        fi

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.25.x

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.64.8
        args: --timeout=5m --out-format=colored-line-number
        install-mode: "goinstall"